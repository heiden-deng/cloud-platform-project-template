spring:
  application:
    name: cloud-platform-demo
  datasource:
    url: ${MYSQL_URL:jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true}
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:123456}
    driverClassName: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 300 #最大连接池数量
    initialSize: 5 #初始化时建立物理连接的个数
    maxWait: 60000 #获取连接时最大等待时间，单位毫秒
    minIdle: 10 #最小连接池数量
    timeBetweenEvictionRunsMillis: 60000 #Destroy线程会检测连接的间隔时间
    minEvictableIdleTimeMillis: 60000
    validationQuery: SELECT 'x' #用来检测连接是否有效的sql，要求是一个查询语句
    testWhileIdle: true #建议配置为true，不影响性能，并且保证安全性。
    testOnBorrow: false # 申请连接时执行validationQuery检测连接是否有效， 做了这个配置会降低性能。
    testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    poolPreparedStatements: true #是否缓存preparedStatement，也就是PSCache
    maxOpenPreparedStatements: 20
    defaultAutoCommit: true
    removeAbandoned: true #对于长时间不使用的连接强制关闭
    removeAbandonedTimeout: 600 #超过10分钟开始关闭空闲连接,秒
    logAbandoned: true  #将当前关闭动作记录到日志
#redis 配置
  redis:
     host: ${REDIS_HOST:127.0.0.1}
     #host: ${REDIS_HOST:{ENC}9+MTrEqvfeafeae31111aAusJKP}
     port: ${REDIS_PORT:6379}
     password: ${REDIS_PASSWORD:123456}
     #password: ${REDIS_PASSWORD:{ENC}+321233213==}
     pool:
       max-idle: 8
       min-idle: 0
       maxTotal: 8
       testOnBorrow: true
       testOnReturn: true
       max-active: 8
       max-wait: -1
     timeout: 3600
     commandTimeout: 5000
     max-redirects: 8
     enabled-cluster-sentinel: ${ENABLED_CLUSTER_SENTINEL:0} #0启动redis单例模式,1启动redis集群模式,2启动redis哨兵模式 
     cluster: # redis 集群模式
       nodes: ${REDIS_CLUSTER:127.0.0.1:7000,127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003,127.0.0.1:7004,127.0.0.1:7005}
       #nodes: ${REDIS_CLUSTER:{ENC}N+FEQ8ie2yyWgageaeGHUQ1111G7ljAOONqMGft1whuNrageageyu2ys6ALg9HCYU/Q5rVAB4pXQQlwvKna9qrVQJD96MEmCfBHjzSiiccnptg7d/F0=}
     sentinel: # redis 哨兵模式
        master: ${REDIS_MASTER:mymaster}
        nodes: ${REDIS_SENTINEL:127.0.0.1:26379,127.0.0.1:26379,127.0.0.1:26379}
  http:
    multipart:
      maxFileSize: -1
      maxRequestSize: -1
server:
  port: ${SERVER_PORT:443}
  tomcat:
    accept-count: 1000
    max-threads: 1000
    max-connections: 2000

system:
  sysName: dbp
  internal:
    show: true #显示内部错误信息
jwt:
  token:
    header: token
    secret: ${JWT_SECRET:111111111111111111111111}
    expiration: 604800

ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000
  filter:
   metadata:
     enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000


custom:      
  redisExpireTime: ${EXPIRE_TIME:30}    #redis数据过期时间
  enabled: false #是否开启
  refreshTime: 10   #定时刷新时间单位s

#增加访问接口文档的安全验证
security.basic.path: /sys/index.html
security.basic.enabled: true
security.user.name: test
security.user.password: 123456